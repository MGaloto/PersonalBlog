# Le agrego el año al Data Set logaritmico
gdp$Año = gdpaño
# redondeamos la variacion
gdp_var$Variacion = round(gdp_var$Variacion,2)
gdp_var_2$Variacion = round(gdp_var_2$Variacion*100,2)
# --------------------------------------------------------------------------------------- #
# Grafico Plotly de Series de Tiempo
grafico = plot_ly(x = ~gdp$Año) %>%
add_lines(y = ~gdp$Argentina, name = "Argentina", line = list(shape = "spline")) %>%
add_lines(y = gdp$Bolivia, name = "Bolivia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Brasil , name = "Brasil", line = list(shape = "spline")) %>%
add_lines(y = gdp$Chile , name = "Chile", line = list(shape = "spline")) %>%
add_lines(y = gdp$Colombia , name = "Colombia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$`Costa Rica` , name = "Costa Rica`", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Dominican , name = "Dominican", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Ecuador , name = "Ecuador", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Guatemala , name = "Guatemala", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Honduras , name = "Honduras", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$México , name = "México", line = list(shape = "spline")) %>%
add_lines(y = gdp$Nicaragua , name = "Nicaragua", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Panamá , name = "Panamá", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Perú , name = "Perú", line = list(shape = "spline")) %>%
add_lines(y = gdp$Paraguay , name = "Paraguay", line = list(shape = "spline")) %>%
add_lines(y = gdp$Uruguay , name = "Uruguay", line = list(shape = "spline")) %>%
add_lines(y = gdp$Venezuela , name = "Venezuela", line = list(shape = "spline")) %>%
layout(title =  "Pib Per capita en Logaritmos Paises LATAM", font = list(size = 12, color = 'black'),
xaxis = list(title = 'Año',
color = 'black',
tickangle = -45),
yaxis = list (title = 'Pib Per Capita', color = 'black'),
paper_bgcolor='white', plot_bgcolor='white')
grafico
grafico2 = plot_ly(x = ~gdp2$Año) %>%
add_lines(y = ~gdp2$Australia, name = "Australia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Austria, name = "Austria", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Bélgica , name = "Bélgica", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Canadá , name = "Canadá", line = list(shape = "spline")) %>%
add_lines(y = gdp2$China , name = "China", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$`Alemania` , name = "Alemania`", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Dinamarca , name = "Dinamarca", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$España , name = "España", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Francia , name = "Francia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$`Reino Unido` , name = "Reino Unido", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Grecia , name = "Grecia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$India , name = "India", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Italia , name = "Italia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Japón , name = "Japón", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Luxemburgo , name = "Luxemburgo", line = list(shape = "spline")) %>%
add_lines(y = gdp2$`Países Bajos` , name = "Países Bajos", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Noruega , name = "Noruega", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$`Nueva Zelandia` , name = "Nueva Zelandia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Portugal , name = "Portugal", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Singapur , name = "Singapur", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Suecia , name = "Suecia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Turquía , name = "Turquía", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Irlanda , name = "Irlanda", line = list(shape = "spline")) %>%
layout(title =  "Pib Per capita en Logaritmos Paises Euro y Asia", font = list(size = 12, color = 'black'),
xaxis = list(title = 'Año',
color = 'black',
tickangle = -45),
yaxis = list (title = 'Pib Per Capita', color = 'black'),
paper_bgcolor='white', plot_bgcolor='white')
grafico2
x = c('Argentina', 'Brasil', 'Chile', 'Uruguay', 'Perú', 'Bolivia', 'Paraguay')
y = c(gdp_var$Variacion[gdp_var$`Country Name` == 'Argentina'] ,
gdp_var$Variacion[gdp_var$`Country Name` == 'Bolivia'] ,
gdp_var$Variacion[gdp_var$`Country Name` == 'Brasil'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Chile'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Paraguay'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Perú'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Uruguay'])
y2 = c('Argentina', 'Brasil', 'Chile', 'Uruguay', 'Perú', 'Bolivia', 'Paraguay')
celeste = '#3aafe1'
verde_claro = '#23c26a'
amarillo_claro = '#d6d24b'
rojo= '#d93b3b'
azul = '#2825e8'
rojo_claro = '#f07d90'
celeste_claro = '#85e9f2'
grafico_barras = plot_ly() %>% add_trace(x = ~sort(x), y = ~y, name= "Paises", type = 'bar',
text = paste(y, '%') , textposition = 'auto',
marker = list(color = c(celeste, verde_claro, amarillo_claro,rojo,azul,rojo_claro,celeste_claro),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Variacion % Pib Per Capita en USD 2020",
barmode = 'group',
xaxis = list(title = "Paises"),
yaxis = list(title = "%"),
annotations = list(x = 1, y = -0.1, text = "Datos del Banco Mundial a dolar oficial",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=13.5, color="grey")))
grafico_barras
x_2 = c('Noruega', 'India', 'Singapur', 'España', 'Grecia', 'China', 'Irlanda')
y_2 = c(gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Noruega'] ,
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'India'] ,
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Singapur'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'España'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Grecia'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'China'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Irlanda'])
celeste = '#3aafe1'
verde_claro = '#23c26a'
amarillo_claro = '#d6d24b'
rojo= '#d93b3b'
azul = '#2825e8'
rojo_claro = '#f07d90'
celeste_claro = '#85e9f2'
grafico_barras_2 = plot_ly() %>% add_trace(x = ~x_2, y = ~y_2, name= "Paises", type = 'bar',
text = paste(y_2, '%') , textposition = 'auto',
marker = list(color = c(celeste, verde_claro, amarillo_claro,rojo,azul,rojo_claro,celeste_claro),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Variacion % Pib Per Capita en USD 2020",
barmode = 'group',
xaxis = list(title = "Paises"),
yaxis = list(title = "%"),
annotations = list(x = 1, y = -0.1, text = "Datos del Banco Mundial a dolar oficial",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=13.5, color="grey")))
grafico_barras_2
# Grafico Plotly de Series de Tiempo
grafico = plot_ly(x = ~gdp$Año) %>%
add_lines(y = ~gdp$Argentina, name = "Argentina", line = list(shape = "spline")) %>%
add_lines(y = gdp$Bolivia, name = "Bolivia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Brasil , name = "Brasil", line = list(shape = "spline")) %>%
add_lines(y = gdp$Chile , name = "Chile", line = list(shape = "spline")) %>%
add_lines(y = gdp$Colombia , name = "Colombia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$`Costa Rica` , name = "Costa Rica`", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Dominican , name = "Dominican", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Ecuador , name = "Ecuador", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Guatemala , name = "Guatemala", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Honduras , name = "Honduras", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$México , name = "México", line = list(shape = "spline")) %>%
add_lines(y = gdp$Nicaragua , name = "Nicaragua", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Panamá , name = "Panamá", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp$Perú , name = "Perú", line = list(shape = "spline")) %>%
add_lines(y = gdp$Paraguay , name = "Paraguay", line = list(shape = "spline")) %>%
add_lines(y = gdp$Uruguay , name = "Uruguay", line = list(shape = "spline")) %>%
add_lines(y = gdp$Venezuela , name = "Venezuela", line = list(shape = "spline")) %>%
layout(title =  "Pib Per capita en Logaritmos Paises LATAM", font = list(size = 12, color = 'black'),
xaxis = list(title = 'Año',
color = 'black',
tickangle = -45),
yaxis = list (title = 'Pib Per Capita', color = 'black'),
paper_bgcolor='white', plot_bgcolor='white')
grafico %>%  config(displayModeBar = F)
grafico2 = plot_ly(x = ~gdp2$Año) %>%
add_lines(y = ~gdp2$Australia, name = "Australia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Austria, name = "Austria", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Bélgica , name = "Bélgica", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Canadá , name = "Canadá", line = list(shape = "spline")) %>%
add_lines(y = gdp2$China , name = "China", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$`Alemania` , name = "Alemania`", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Dinamarca , name = "Dinamarca", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$España , name = "España", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Francia , name = "Francia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$`Reino Unido` , name = "Reino Unido", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Grecia , name = "Grecia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$India , name = "India", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Italia , name = "Italia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Japón , name = "Japón", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Luxemburgo , name = "Luxemburgo", line = list(shape = "spline")) %>%
add_lines(y = gdp2$`Países Bajos` , name = "Países Bajos", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Noruega , name = "Noruega", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$`Nueva Zelandia` , name = "Nueva Zelandia", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Portugal , name = "Portugal", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Singapur , name = "Singapur", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Suecia , name = "Suecia", line = list(shape = "spline")) %>%
add_lines(y = gdp2$Turquía , name = "Turquía", line = list(shape = "spline"), visible = 'legendonly') %>%
add_lines(y = gdp2$Irlanda , name = "Irlanda", line = list(shape = "spline")) %>%
layout(title =  "Pib Per capita en Logaritmos Paises Euro y Asia", font = list(size = 12, color = 'black'),
xaxis = list(title = 'Año',
color = 'black',
tickangle = -45),
yaxis = list (title = 'Pib Per Capita', color = 'black'),
paper_bgcolor='white', plot_bgcolor='white')
grafico2 %>%  config(displayModeBar = F)
x = c('Argentina', 'Brasil', 'Chile', 'Uruguay', 'Perú', 'Bolivia', 'Paraguay')
y = c(gdp_var$Variacion[gdp_var$`Country Name` == 'Argentina'] ,
gdp_var$Variacion[gdp_var$`Country Name` == 'Bolivia'] ,
gdp_var$Variacion[gdp_var$`Country Name` == 'Brasil'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Chile'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Paraguay'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Perú'],
gdp_var$Variacion[gdp_var$`Country Name` == 'Uruguay'])
y2 = c('Argentina', 'Brasil', 'Chile', 'Uruguay', 'Perú', 'Bolivia', 'Paraguay')
celeste = '#3aafe1'
verde_claro = '#23c26a'
amarillo_claro = '#d6d24b'
rojo= '#d93b3b'
azul = '#2825e8'
rojo_claro = '#f07d90'
celeste_claro = '#85e9f2'
grafico_barras = plot_ly() %>% add_trace(x = ~sort(x), y = ~y, name= "Paises", type = 'bar',
text = paste(y, '%') , textposition = 'auto',
marker = list(color = c(celeste, verde_claro, amarillo_claro,rojo,azul,rojo_claro,celeste_claro),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Variacion % Pib Per Capita en USD 2020",
barmode = 'group',
xaxis = list(title = "Paises"),
yaxis = list(title = "%"),
annotations = list(x = 1, y = -0.1, text = "Datos del Banco Mundial a dolar oficial",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=13.5, color="grey")))
grafico_barras %>%  config(displayModeBar = F)
x_2 = c('Noruega', 'India', 'Singapur', 'España', 'Grecia', 'China', 'Irlanda')
y_2 = c(gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Noruega'] ,
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'India'] ,
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Singapur'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'España'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Grecia'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'China'],
gdp_var_2$Variacion[gdp_var_2$`Country Name` == 'Irlanda'])
celeste = '#3aafe1'
verde_claro = '#23c26a'
amarillo_claro = '#d6d24b'
rojo= '#d93b3b'
azul = '#2825e8'
rojo_claro = '#f07d90'
celeste_claro = '#85e9f2'
grafico_barras_2 = plot_ly() %>% add_trace(x = ~x_2, y = ~y_2, name= "Paises", type = 'bar',
text = paste(y_2, '%') , textposition = 'auto',
marker = list(color = c(celeste, verde_claro, amarillo_claro,rojo,azul,rojo_claro,celeste_claro),
line = list(color = 'rgb(8,48,107)', width = 1.5))) %>%
layout(title = "Variacion % Pib Per Capita en USD 2020",
barmode = 'group',
xaxis = list(title = "Paises"),
yaxis = list(title = "%"),
annotations = list(x = 1, y = -0.1, text = "Datos del Banco Mundial a dolar oficial",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=13.5, color="grey")))
grafico_barras_2 %>%  config(displayModeBar = F)
distill::create_post('Data Warehouse')
knitr::opts_chunk$set(echo = FALSE)
knitr::include_graphics("maxi2.jpeg")
knitr::include_graphics("C:/Users/maxig/Desktop/Carpetas/Trabajos en R/Netlify/Blog/_site/maxi2.jpeg")
dir()
distill::create_post('Political marketing')
distill::create_post('aa')
library(flexdashboard)
library(tidyr)
library(ggplot2)
library(readr)
library(dplyr)
library(plotly)
library(readxl)
library(rvest)
library(rsconnect)
library(ggplot2)
library(ggthemes)
library(viridisLite)
library(dplyr)
library(plotly)
library(tidyverse)
library(ggplot2)
library(readr)
library(dplyr)
library(crayon)
library(modeest)
library(readxl)
library(ggthemes)
library(lubridate)
library(highcharter)
setwd('C:/Users/maxig/Desktop/Carpetas/Trabajos en R/Social Media')
df = read_excel('instagram_actualizado.xlsx')
df_instagram_seguidores = df %>%  select(contains('instagram')) %>%  select(contains('seguidores'))
df_instagram_seguidos = df %>%  select(contains('instagram')) %>%  select(contains('seguidos'))
df_instagram_publicaciones = df %>%  select(contains('instagram')) %>%  select(contains('publicaciones'))
df_instagram_seguidores$date = df$date
df_instagram_seguidos$date = df$date
df_instagram_publicaciones$date = df$date
df_100 = read_excel('instagram_seguidores_100.xlsx')
# https://rstudio-pubs-static.s3.amazonaws.com/304105_70f2ad540827454e934117e3d90f6c1a.html
df_100_twitter = read_excel('twitter_seguidores_100.xlsx')
df_100_total = read_excel('total_seguidores_100.xlsx')
df_twitter_seguidores = df %>%  select(contains('twitter')) %>%  select(contains('seguidores'))
df_twitter_seguidores = df %>%  select(contains('twitter')) %>%  select(contains('seguidores'))
# INSTAGRAM
##################################################################################################################
nombres = c()
for (i in 1:16)
nombres[i] <- colnames(df_100)[i + 1]
porcentaje_semanal = c()
for (i in 1:16)
porcentaje_semanal[i] <- round((as.numeric(df_100[nrow(df_100),i + 1]) - as.numeric(df_100[nrow(df_100) - 7,i + 1])) / as.numeric(df_100[nrow(df_100),i + 1]) * 100,2)
porcentaje_mensual = c()
for (i in 1:16)
porcentaje_mensual[i] <- round((as.numeric(df_100[nrow(df_100),i + 1]) - as.numeric(df_100[nrow(df_100) - 30,i + 1])) / as.numeric(df_100[nrow(df_100),i + 1]) * 100,2)
df_var_instagram = data.frame(nombres, porcentaje_semanal, porcentaje_mensual)
df_var_instagram$nombres = gsub("instagram_", "", df_var_instagram$nombres)
df_var_instagram$nombres = gsub("_seguidores", "", df_var_instagram$nombres)
##################################################################################################################
# TWITTER
nombres = c()
for (i in 1:16)
nombres[i] <- colnames(df_100_twitter)[i + 1]
porcentaje_semanal = c()
for (i in 1:16)
porcentaje_semanal[i] <- round((as.numeric(df_100_twitter[nrow(df_100_twitter),i + 1]) - as.numeric(df_100_twitter[nrow(df_100_twitter) - 7,i + 1])) / as.numeric(df_100_twitter[nrow(df_100_twitter),i + 1]) * 100,2)
porcentaje_mensual = c()
for (i in 1:16)
porcentaje_mensual[i] <- round((as.numeric(df_100_twitter[nrow(df_100_twitter),i + 1]) - as.numeric(df_100_twitter[nrow(df_100_twitter) - 30,i + 1])) / as.numeric(df_100_twitter[nrow(df_100_twitter),i + 1]) * 100,2)
df_var_twitter = data.frame(nombres, porcentaje_semanal, porcentaje_mensual)
df_var_twitter$nombres = gsub("twitter_", "", df_var_twitter$nombres)
df_var_twitter$nombres = gsub("_seguidores", "", df_var_twitter$nombres)
##################################################################################################################
# TOTAL
nombres = c()
for (i in 1:16)
nombres[i] <- colnames(df_100_total)[i + 1]
porcentaje_semanal = c()
for (i in 1:16)
porcentaje_semanal[i] <- round((as.numeric(df_100_total[nrow(df_100_total),i + 1]) - as.numeric(df_100_total[nrow(df_100_total) - 7,i + 1])) / as.numeric(df_100_total[nrow(df_100_total),i + 1]) * 100,2)
porcentaje_mensual = c()
for (i in 1:16)
porcentaje_mensual[i] <- round((as.numeric(df_100_total[nrow(df_100_total),i + 1]) - as.numeric(df_100_total[nrow(df_100_total) - 30,i + 1])) / as.numeric(df_100_total[nrow(df_100_total),i + 1]) * 100,2)
df_var_total = data.frame(nombres, porcentaje_semanal, porcentaje_mensual)
df_var_total$nombres = gsub("total_", "", df_var_total$nombres)
df_var_total$nombres = gsub("_seguidores", "", df_var_total$nombres)
##################################################################################################################
# PIE CHART TOTAL
seguidores = c()
for (i in 1:16)
seguidores[i] <- ( as.numeric(df_instagram_seguidores[nrow(df_instagram_seguidores),i]) +
as.numeric(df_twitter_seguidores[nrow(df_twitter_seguidores),i]) )
df_foll = data.frame(nombres, seguidores)
df_foll$nombres = gsub("total_", "", df_foll$nombres)
df_foll$nombres = gsub("_seguidores", "", df_foll$nombres)
# PIE CHART INSTAGRAM
seguidores = c()
for (i in 1:16)
seguidores[i] <- as.numeric(df_instagram_seguidores[nrow(df_instagram_seguidores),i])
df_foll_insta = data.frame(nombres, seguidores)
df_foll_insta$nombres = gsub("instagram_", "", df_foll_insta$nombres)
df_foll_insta$nombres = gsub("_seguidores", "", df_foll_insta$nombres)
# PIE CHART TWITTER
seguidores = c()
for (i in 1:16)
seguidores[i] <- as.numeric(df_twitter_seguidores[nrow(df_twitter_seguidores),i])
df_foll_twitter = data.frame(nombres, seguidores)
df_foll_twitter$nombres = gsub("twitter_", "", df_foll_twitter$nombres)
df_foll_twitter$nombres = gsub("_seguidores", "", df_foll_twitter$nombres)
tt <- highchart() %>%
hc_xAxis(categories = df_100_total$date) %>%
hc_add_series(name = "Milei", data = df_100_total$total_javiermilei_seguidores) %>%
hc_add_series(name = "CFK", data = df_100_total$total_cristinafkirchner_seguidores) %>%
hc_add_series(name = "Macri", data = df_100_total$total_mauriciomacri_seguidores) %>%
hc_add_series(name = "Espert", data = df_100_total$total_joseluisespert_seguidores) %>%
hc_add_series(name = "Tetaz", data = df_100_total$total_martintetazok_seguidores) %>%
hc_add_series(name = "Massa", data = df_100_total$total_sergiomassaok_seguidores) %>%
hc_add_series(name = "Vidal", data = df_100_total$total_mariuvidal_seguidores) %>%
hc_add_series(name = "Bregman", data = df_100_total$total_myriambregman_seguidores) %>%
hc_add_series(name = "Bullrich", data = df_100_total$total_patobullrich_seguidores) %>%
hc_add_series(name = "Alberto", data = df_100_total$total_alferdezok_seguidores) %>%
hc_add_series(name = "Kichillof", data = df_100_total$total_kicillofok_seguidores) %>%
hc_add_series(name = "Lousteau", data = df_100_total$total_gugalusto_seguidores) %>%
hc_add_series(name = "Tolosa", data = df_100_total$total_vtolosapaz_seguidores) %>%
hc_add_series(name = "Santilli", data = df_100_total$total_diegosantilliok_seguidores) %>%
hc_add_series(name = "Larreta", data = df_100_total$total_horaciorodriguezlarreta_seguidores) %>%
hc_add_theme(hc_theme_google()) %>%
hc_title(text = 'Social Media Politics Argentina',
style = list(fontSize = '25px', fontWeight = 'bold')) %>%
hc_subtitle(text = paste('Instagram + Twitter al', today()),
style = list(fontSize = '16px', color = "#0f0f0f")) %>%
hc_credits(enabled = TRUE, text = '@MGaloto',
style = list(fontSize = '16px', color = "#0f0f0f"))
tt
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(plotly)
library(readxl)
library(ggplot2)
library(viridisLite)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(lubridate)
library(highcharter)
df_100_total = read_excel('total_seguidores_100.xlsx')
View(df_100_total)
names = c()
x = 0
n_col = ncol(df_100) - 1
df_100_total = df_100_total[,1:18]
View(df_100_total)
df_100_total = df_100_total[,1:17]
names = c()
x = 0
n_col = ncol(df_100_total) - 1
while (x < n_col) {
names = c(names,paste0("Pol_", x + 1))
x = x + 1
}
names
colnames(df_100_total) = c('date', names)
View(df_100_total)
tt <- highchart() %>%
hc_xAxis(categories = df_100_total$date) %>%
hc_add_series(name = "1", data = df_100_total$Pol_1) %>%
hc_add_series(name = "2", data = df_100_total$Pol_2) %>%
hc_add_series(name = "3", data = df_100_total$Pol_3) %>%
hc_add_series(name = "4", data = df_100_total$Pol_4) %>%
hc_add_series(name = "5", data = df_100_total$Pol_5) %>%
hc_add_series(name = "6", data = df_100_total$Pol_6) %>%
hc_add_series(name = "7", data = df_100_total$Pol_7) %>%
hc_add_series(name = "8", data = df_100_total$Pol_8) %>%
hc_add_series(name = "9", data = df_100_total$Pol_9) %>%
hc_add_series(name = "10", data = df_100_total$Pol_10) %>%
hc_add_series(name = "11", data = df_100_total$Pol_11) %>%
hc_add_series(name = "12", data = df_100_total$Pol_12) %>%
hc_add_series(name = "13", data = df_100_total$Pol_13) %>%
hc_add_series(name = "14", data = df_100_total$Pol_14) %>%
hc_add_series(name = "15", data = df_100_total$Pol_15) %>%
hc_add_series(name = "16", data = df_100_total$Pol_16) %>%
hc_add_theme(hc_theme_google()) %>%
hc_title(text = 'Social Media Politics Argentina',
style = list(fontSize = '25px', fontWeight = 'bold')) %>%
hc_subtitle(text = paste('Instagram + Twitter al', today()),
style = list(fontSize = '16px', color = "#0f0f0f")) %>%
hc_credits(enabled = TRUE, text = '@MGaloto',
style = list(fontSize = '16px', color = "#0f0f0f"))
tt
tt <- highchart() %>%
hc_xAxis(categories = df_100_total$date) %>%
hc_add_series(name = "1", data = df_100_total$Pol_1) %>%
hc_add_series(name = "2", data = df_100_total$Pol_2) %>%
hc_add_series(name = "3", data = df_100_total$Pol_3) %>%
hc_add_series(name = "4", data = df_100_total$Pol_4) %>%
hc_add_series(name = "5", data = df_100_total$Pol_5) %>%
hc_add_series(name = "6", data = df_100_total$Pol_6) %>%
hc_add_series(name = "7", data = df_100_total$Pol_7) %>%
hc_add_series(name = "8", data = df_100_total$Pol_8) %>%
hc_add_series(name = "9", data = df_100_total$Pol_9) %>%
hc_add_series(name = "10", data = df_100_total$Pol_10) %>%
hc_add_series(name = "11", data = df_100_total$Pol_11) %>%
hc_add_series(name = "12", data = df_100_total$Pol_12) %>%
hc_add_series(name = "13", data = df_100_total$Pol_13) %>%
hc_add_series(name = "14", data = df_100_total$Pol_14) %>%
hc_add_series(name = "15", data = df_100_total$Pol_15) %>%
hc_add_series(name = "16", data = df_100_total$Pol_16) %>%
hc_add_theme(hc_theme_google()) %>%
hc_title(text = 'Social Media Politics Argentina',
style = list(fontSize = '25px', fontWeight = 'bold')) %>%
hc_subtitle(text = paste('Followers Trend Instagram + Twitter al', today()),
style = list(fontSize = '16px', color = "#0f0f0f")) %>%
hc_credits(enabled = TRUE, text = '@MGaloto',
style = list(fontSize = '16px', color = "#0f0f0f"))
tt
library(dplyr)
library(plotly)
library(readxl)
library(ggplot2)
library(viridisLite)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(lubridate)
library(highcharter)
df_series = read_csv('series.csv')
library(dplyr)
library(plotly)
library(readr)
library(ggplot2)
library(viridisLite)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(lubridate)
library(highcharter)
df_series = read_csv('series.csv')
df_series = read.csv('series.csv')
table(df_series$Tipo)
df_series = data.frame(table(df_series$Tipo))
View(df_series)
colnames(df_series) = c('Genero','Frecuencia')
View(df_series)
pie = df_series %>%
hchart('pie', hcaes(x = Genero, y = Frecuencia, color = viridis::mako(n = length(df_series$Genero)))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Cantidad Diagnostico</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Diagnosticos',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>From MySql</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = '@MGaloto',
style = list(fontSize = '16px', color = "black"))
pie
today()
pie = df_series %>%
hchart('pie', hcaes(x = Genero, y = Frecuencia, color = viridis::mako(n = length(df_series$Genero)))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Cantidad Diagnostico</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Genero Series Starz',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b>From MySql</b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = '@MGaloto',
style = list(fontSize = '16px', color = "black"))
pie
pie = df_series %>%
hchart('pie', hcaes(x = Genero, y = Frecuencia, color = viridis::mako(n = length(df_series$Genero)))) %>%
hc_add_theme(hc_theme_google()) %>%
hc_tooltip(pointFormat = '<b>Cantidad Diagnostico</b>  {point.y}') %>%
hc_title(text = 'Pie Chart Genero Series Starz',
style = list(fontSize = '20px', fontWeight = 'bold')) %>%
hc_subtitle(text = '<b></b>',
style = list(fontSize = '16px', color = "black")) %>%
hc_credits(enabled = TRUE, text = '@MGaloto',
style = list(fontSize = '16px', color = "black"))
pie
